#!/usr/bin/env bb -cp src

(require '[babashka.fs :as fs]
         '[templates.core :refer [template routes]])

(def html-dir "pages")

(defn ensure-parent-dir [file-path]
  (when (str/includes? (subs file-path 6) "/")
    (fs/create-dirs (str/join "/" (butlast (str/split file-path #"/"))))))

(defn page [{:keys [path title content]}]
  (let [path-fix-index (if (str/ends-with? path "/") (str path "index") path)
        html-path (str html-dir path-fix-index ".html")]
    (println (str "~ Building " html-path "."))
    (ensure-parent-dir html-path)
    (spit html-path (template title content))))

;; # Disable everything by default.
;; User-agent: *
;; Disallow: /

;; # Allow list.
;; Allow: /$
;; Allow: /about$
(defn write-robots-txt []
  (println "~ Writing robots.txt.")
  (let [paths (map :path (vals routes))
        lines (concat ["User-agent: *" "Disallow: /"]
                      (map #(str "Allow: " % "$") paths))]
    (spit (str html-dir "/robots.txt") (str/join "\n" lines))))

(defn process-args [args]
  (fs/create-dirs html-dir)
  (doseq [path args]
    (let [data (edn/read-string (slurp path))]
      (page data))))

(defn process-default []
  (write-robots-txt)
  (process-args
   (filter #(not (str/includes? % "#"))
           (map str (fs/glob "src/pages" "*.edn")))))

(if (seq *command-line-args*)
  (process-args *command-line-args*)
  (process-default))
